{"version":3,"sources":["components/Header/Header.module.css","components/Sidebar/Sidebar.module.css","components/Profile/ProfileMyPosts/ProfileMyPosts.module.css","components/Profile/ProfileMyPosts/Post/Post.module.css","App.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","types/types.ts","redux/profileReducer.ts","redux/users-reducer.ts","redux/store.ts","hoc/Layouts/Layouts.tsx","components/UI/Button/Button.tsx","components/Header/Header.tsx","components/Sidebar/Sidebar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/ProfileMyPosts/Post/Post.tsx","components/Profile/ProfileMyPosts/ProfileMyPostsContainer.tsx","components/Profile/ProfileMyPosts/ProfileMyPosts.tsx","components/Profile/Profile.tsx","components/Dialogs/Dialogs.tsx","components/Users/Users.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ADD_POST","initialState","posts","id","message","likesCount","changeText","users","name","lastName","status","followed","location","city","country","reducers","combineReducers","profileReducer","state","action","type","newPost","length","postText","trim","usersReducer","store","createStore","Layouts","props","children","Button","disabled","onClick","title","styleButton","className","Header","classes","HeaderContainer","Logo","to","SearchPanel","InformationBlock","Bell","Settings","Sidebar","Nav","activeClassName","Active","ProfileInfo","Post","PostInfo","EllipsisButton","src","alt","PostContent","ProfileMyPostsContainer","connect","dispatch","addNewPostAC","changeTextAC","changeTextActionCreator","ProfileMyPosts","BlockAddPost","Textarea","value","onChange","event","currentTarget","placeholder","ButtonAddPost","Posts","map","post","index","key","ProfileMyPostsBlockInfo","Profile","Dialogs","Users","App","Content","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c7a8dc66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"HeaderContainer\":\"Header_HeaderContainer__F-Ur3\",\"Logo\":\"Header_Logo__18l3V\",\"SearchPanel\":\"Header_SearchPanel__1WQZJ\",\"InformationBlock\":\"Header_InformationBlock__2sbRR\",\"Bell\":\"Header_Bell__2bW3X\",\"Settings\":\"Header_Settings__3zfTv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__2ajNT\",\"Nav\":\"Sidebar_Nav__3VYY9\",\"Active\":\"Sidebar_Active__1zSkW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileMyPosts\":\"ProfileMyPosts_ProfileMyPosts__2nvkF\",\"Posts\":\"ProfileMyPosts_Posts__3ZeYH\",\"BlockAddPost\":\"ProfileMyPosts_BlockAddPost__2UvO_\",\"Textarea\":\"ProfileMyPosts_Textarea__3xbwW\",\"ProfileMyPostsBlockInfo\":\"ProfileMyPosts_ProfileMyPostsBlockInfo__3VRFl\",\"ButtonAddPost\":\"ProfileMyPosts_ButtonAddPost__12ida\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__1RMN-\",\"PostInfo\":\"Post_PostInfo__3lYZ6\",\"EllipsisButton\":\"Post_EllipsisButton__10kNR\",\"PostContent\":\"Post_PostContent__1MYt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Content\":\"App_Content__ZaMNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3HF8E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__34LEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__1HvdP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__2PrNQ\"};","import {addNewPostActionCreator, changeTextActionCreator} from \"../redux/profileReducer\";\n\nexport const ADD_POST = 'profile-page/ADD-POST';\nexport const CHANGE_POST_TEXT = 'profile-page/CHANGE-POST-TEXT';\n\n// profilePage\nexport type PostType = {\n\tid: number\n\tmessage: string\n\tlikesCount: number\n};\n\nexport type ProfilePageType = {\n\tposts: Array<PostType>\n\tchangeText: string\n};\n\nexport type ProfilePageActionTypes = AddNewPostActionType | ChangeTextActionType;\nexport type AddNewPostActionType = ReturnType<typeof addNewPostActionCreator>;\nexport type ChangeTextActionType = ReturnType<typeof changeTextActionCreator>;\n// profilePage\n\n// usersPage\nexport type UserLocationType = {\n\tcity: string\n\tcountry: string\n};\n\nexport type UserType = {\n\tid: number\n\tname: string\n\tlastName: string\n\tstatus: string\n\tfollowed: boolean\n\tlocation: UserLocationType\n};\n\nexport type UsersType = {\n\tusers: Array<UserType>\n};\n// usersPage","import {ADD_POST, CHANGE_POST_TEXT, ProfilePageActionTypes, ProfilePageType} from \"../types/types\";\n\nconst initialState: ProfilePageType = {\n\tposts: [\n\t\t{id: 1, message: \"Post 4\", likesCount: 2},\n\t\t{id: 2, message: \"Post 3\", likesCount: 12},\n\t\t{id: 3, message: \"Post 2\", likesCount: 5},\n\t\t{id: 4, message: \"Post 1\", likesCount: 15},\n\t],\n\tchangeText: ''\n};\n\nexport const profileReducer = (state = initialState, action: ProfilePageActionTypes) => {\n\tswitch (action.type) {\n\n\t\tcase ADD_POST:\n\t\t\tconst newPost = {\n\t\t\t\tid: state.posts.length + 1,\n\t\t\t\tmessage: state.changeText,\n\t\t\t\tlikesCount: 0\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state, posts: [newPost, ...state.posts], changeText: ''\n\t\t\t};\n\n\t\tcase CHANGE_POST_TEXT:\n\t\t\treturn {\n\t\t\t\t...state, changeText: action.postText.trim() !== '' ? action.postText : ''\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const addNewPostActionCreator = () => {\n\treturn {\n\t\ttype: ADD_POST\n\t} as const\n};\n\nexport const changeTextActionCreator = (postText: string) => {\n\treturn {\n\t\ttype: CHANGE_POST_TEXT,\n\t\tpostText\n\t} as const\n};","import {UsersType} from \"../types/types\";\n\nconst initialState: UsersType = {\n\tusers: [\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: 'Alexandr',\n\t\t\tlastName: 'Homan',\n\t\t\tstatus: 'Learn ReactJS',\n\t\t\tfollowed: false,\n\t\t\tlocation: {\n\t\t\t\tcity: 'Minsk',\n\t\t\t\tcountry: 'Belarus'\n\t\t\t}\n\t\t}\n\t]\n};\n\nexport const usersReducer = (state = initialState, action: any) => {\n\tswitch (action.type) {\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const followActionCreator = () => {\n\treturn {\n\n\t};\n};","import {combineReducers, createStore} from \"redux\";\nimport {profileReducer} from \"./profileReducer\";\nimport {usersReducer} from \"./users-reducer\";\n\nconst reducers = combineReducers({\n\tprofileReducer,\n\tusersReducer\n});\n\nexport const store = createStore(reducers);","import React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"../../redux/store\";\n\nexport const Layouts = (props: any) => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<>\n\t\t\t\t\t{props.children}\n\t\t\t\t</>\n\t\t\t</Provider>\n\t\t</BrowserRouter>\n\t)\n};","import React from \"react\";\n\ntype ButtonType = {\n\tdisabled?: boolean\n\tonClick?: () => void\n\ttitle?: string\n\tstyleButton?: string\n}\n\nexport const Button: React.FC<ButtonType> = (\n\t{\n\t\tdisabled,\n\t\tonClick,\n\t\ttitle,\n\t\tstyleButton\n\t}) => {\n\treturn (\n\t\t<button\n\t\t\tdisabled={disabled}\n\t\t\tonClick={onClick}\n\t\t\tclassName={styleButton}\n\t\t>\n\t\t\t{title ? title : null}\n\t\t</button>\n\t)\n}","import React from 'react';\nimport classes from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {Button} from \"../UI/Button/Button\";\n\nexport const Header = () => {\n\treturn (\n\t\t<div className={classes.Header}>\n\n\t\t\t<div className={classes.HeaderContainer}>\n\n\t\t\t\t<div className={classes.Logo}>\n\t\t\t\t\t<NavLink to={'/'}>\n\t\t\t\t\t\t<i className=\"fa fa-xing\"/>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.SearchPanel}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input type=\"text\"/>\n\t\t\t\t\t\t<Button/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.InformationBlock}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tstyleButton={classes.Bell}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tstyleButton={classes.Settings}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t</div>\n\t)\n};","import React from \"react\";\nimport classes from './Sidebar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nexport const Sidebar = () => {\n\treturn (\n\t\t<div className={classes.Sidebar}>\n\t\t\t<div className={classes.Nav}>\n\t\t\t\t<div><NavLink to={'/profile'} activeClassName={classes.Active}>Profile</NavLink></div>\n\t\t\t\t<div><NavLink to={'/dialogs'} activeClassName={classes.Active}>Dialogs</NavLink></div>\n\t\t\t\t<div><NavLink to={'/users'} activeClassName={classes.Active}>Users</NavLink></div>\n\t\t\t\t<div><NavLink to={'/settings'} activeClassName={classes.Active}>Settings</NavLink></div>\n\t\t\t</div>\n\t\t</div>\n\t)\n};","import React from 'react';\nimport classes from './ProfileInfo.module.css';\n\nexport const ProfileInfo = () => {\n\treturn (\n\t\t<div className={classes.ProfileInfo}>\n\t\t\tProfileInfo\n\t\t</div>\n\t)\n};","import React from \"react\";\nimport classes from \"./Post.module.css\";\nimport {Button} from \"../../../UI/Button/Button\";\nimport {PostType} from \"../../../../types/types\";\n\n\nexport const Post: React.FC<PostType> = ({id, message,  likesCount}) => {\n\treturn (\n\t\t<div className={classes.Post}>\n\t\t\t<div className={classes.PostInfo}>\n\t\t\t\t<h3>Alexandr Homan</h3>\n\t\t\t\t<span>6 day a go</span>\n\t\t\t\t<Button\n\t\t\t\t\tstyleButton={classes.EllipsisButton}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<img\n\t\t\t\tsrc=\"https://www.alvinailey.org/sites/default/files/styles/slideshow_image/public/melanie-person.jpg?itok=ocw3xkx_\"\n\t\t\t\talt=\"\"/>\n\t\t\t<div className={classes.PostContent}>\n\t\t\t\t<p>{message}</p>\n\t\t\t\t<div>\n\t\t\t\t\t<span>Нравится: <b>{likesCount}</b></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n};","import {connect} from \"react-redux\";\nimport {ProfileMyPosts} from \"./ProfileMyPosts\";\nimport {addNewPostActionCreator, changeTextActionCreator} from \"../../../redux/profileReducer\";\n\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tposts: state.profileReducer.posts,\n\t\tchangeText: state.profileReducer.changeText\n\t}\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\taddNewPostAC: () => dispatch(addNewPostActionCreator()),\n\t\tchangeTextAC: (postText: string) => dispatch(changeTextActionCreator(postText))\n\t}\n};\n\nexport const ProfileMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(ProfileMyPosts);","import React, {ChangeEvent} from 'react';\nimport classes from './ProfileMyPosts.module.css';\nimport {Button} from \"../../UI/Button/Button\";\nimport {Post} from \"./Post/Post\";\nimport {PostType} from \"../../../types/types\";\n\ntype ProfileMyPostsType = {\n\tposts: Array<PostType>\n\tchangeText: string\n\taddNewPostAC: () => void\n\tchangeTextAC: (postText: string) => void\n}\n\nexport const ProfileMyPosts: React.FC<ProfileMyPostsType> = (\n\t{\n\t\tposts,\n\t\tchangeText,\n\t\taddNewPostAC,\n\t\tchangeTextAC\n\t}) => {\n\n\tconst onChangePostText = (event: ChangeEvent<HTMLTextAreaElement>) => {\n\t\tchangeTextAC(event.currentTarget.value);\n\t};\n\n\tconst onClickAddNewPost = () => {\n\t\taddNewPostAC();\n\t};\n\n\treturn (\n\t\t<div className={classes.ProfileMyPosts}>\n\n\t\t\t<div className={classes.BlockAddPost}>\n\n\t\t\t\t<div>\n\t\t\t\t\t<div className={classes.Textarea}>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tvalue={changeText}\n\t\t\t\t\t\tonChange={onChangePostText}\n\t\t\t\t\t\tplaceholder={'Add new post'}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={changeText === ''}\n\t\t\t\t\t\t\ttitle={'Add post'}\n\t\t\t\t\t\t\tstyleButton={classes.ButtonAddPost}\n\t\t\t\t\t\t\tonClick={onClickAddNewPost}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.Posts}>\n\t\t\t\t\t{\n\t\t\t\t\t\tposts.map((post, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\tkey={index + '_' + post.id}\n\t\t\t\t\t\t\t\t\tmessage={post.message}\n\t\t\t\t\t\t\t\t\tlikesCount={post.likesCount}\n\t\t\t\t\t\t\t\t\tid={post.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div className={classes.ProfileMyPostsBlockInfo}>\n\t\t\t\t<h3>Information</h3>\n\t\t\t</div>\n\n\t\t</div>\n\t)\n};","import React from \"react\";\nimport classes from './Profile.module.css';\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {ProfileMyPostsContainer} from \"./ProfileMyPosts/ProfileMyPostsContainer\";\n\nexport const Profile = () => {\n\treturn (\n\t\t<div className={classes.Profile}>\n\n\t\t\t{/* ProfileInfoContainer */}\n\t\t\t<ProfileInfo/>\n\n\t\t\t{/* ProfileMyPostsContainer */}\n\t\t\t<ProfileMyPostsContainer/>\n\n\t\t</div>\n\t)\n};","import React from 'react';\nimport classes from './Dialogs.module.css';\n\nexport const Dialogs = () => {\n\treturn (\n\t\t<div className={classes.Dialogs}>\n\t\t\tDialogs\n\t\t</div>\n\t)\n};","import React from \"react\";\nimport classes from \"./Users.module.css\";\n\nexport const Users = () => {\n\treturn (\n\t\t<div className={classes.Users}>\n\t\t\tUsers\n\t\t</div>\n\t)\n};","import React from 'react';\nimport classes from './App.module.css';\nimport {Layouts} from \"./hoc/Layouts/Layouts\";\nimport {Header} from \"./components/Header/Header\";\nimport {Sidebar} from \"./components/Sidebar/Sidebar\";\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {Users} from \"./components/Users/Users\";\n\nexport const App = () => {\n\treturn (\n\t\t<div className={classes.App}>\n\n\t\t\t<Layouts>\n\t\t\t\t<Header/>\n\n\t\t\t\t<div className={classes.Content}>\n\t\t\t\t\t<Sidebar/>\n\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath={'/profile'}\n\t\t\t\t\t\t\trender={() => <Profile/>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath={'/dialogs'}\n\t\t\t\t\t\t\trender={() => <Dialogs/>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath={'/users'}\n\t\t\t\t\t\t\trender={() => <Users/>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path={'/'} render={() => <Redirect to={'/profile'}/>} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\n\t\t\t</Layouts>\n\n\t\t</div>\n\t);\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App/>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}